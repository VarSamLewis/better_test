# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  workflow_dispatch:
  # Triggers the workflow on push or pull request events but only for the main branch

  push:
    branches: [ "main" ]
    paths-ignore:
      - '**.md'
      - '**.rst'
      - '**.txt'
      - 'docs/**'
      - .gitignore
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - '**.md'
      - '**.rst'
      - '**.txt'
      - 'docs/**'
      - .gitignore
jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pandas polars numpy coverage
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        # Install the package in development mode
        pip install -e .

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test with unittest
      run: |
        # Try to discover tests in the tests directory
        if [ -d "tests" ]; then
          python -m unittest discover -s tests -p "test_*.py"
        # If no tests directory, try running the testsuite directly
        elif [ -f "src/unittestplus/testsuite.py" ]; then
          python -m unittestplus.testsuite
        else
          echo "No tests found!"
          exit 1
        fi
    
    - name: Generate coverage report
      run: |
        if [ -d "tests" ]; then
          coverage run -m unittest discover -s tests -p "test_*.py"
        elif [ -f "src/unittestplus/testsuite.py" ]; then
          coverage run -m unittestplus.testsuite
        fi
        coverage report
        coverage xml
    
    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage.xml